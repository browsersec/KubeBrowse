FROM golang:1.24-alpine AS builder

WORKDIR /app

# Install dependencies for builder including sqlc
RUN apk add --no-cache git make bash curl

# Install sqlc
RUN curl -L https://github.com/sqlc-dev/sqlc/releases/download/v1.29.0/sqlc_1.29.0_linux_amd64.tar.gz | tar -xz -C /usr/local/bin

COPY go.mod go.sum ./
RUN sed -i '/^tool github.com\/evilmartians\/lefthook/d' go.mod
RUN go mod download

# Copy source files needed for sqlc generation
COPY sqlc.yaml ./sqlc.yaml
COPY db/ ./db/

# Generate sqlc code
RUN sqlc generate

# Copy remaining source files (excluding db/ since it's already copied)
COPY cmd/ ./cmd/
COPY internal/ ./internal/
COPY api/ ./api/
COPY docs/ ./docs/
COPY templates/ ./templates/
COPY go.mod go.sum ./

# Initial build of the application
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o guac cmd/guac/main.go

# Final stage for running the application
FROM alpine:3.20

# Install Go, bash, ca-certificates, and openssl.
# Go and bash are needed for Tilt's live_update run steps if they compile/run scripts.
RUN apk --no-cache add ca-certificates openssl go bash

WORKDIR /app

# Copy the built binary from the builder stage.
COPY --from=builder /app/guac /app/guac
# Copy templates (if your application uses them from filesystem at runtime)
COPY --from=builder /app/templates /app/templates

# Create certificates directory (certificates will be generated by init container)
RUN mkdir -p /app/certs

ENV CERT_PATH=/app/certs/certificate.crt
ENV CERT_KEY_PATH=/app/certs/private.key
ENV GUACD_ADDRESS=guacd:4822 

EXPOSE 4567
CMD ["/app/guac"]
