name: Build and Push Cleanup Service Docker Image

on:
  push:
    branches: [ main, "chore/improve-back" ]
    paths:
      - 'internal/redis/**'
      - 'internal/k8s/**'
      - 'internal/cleanup/**'
      - 'cmd/cleanup/**'
      - 'Dockerfile.cleanup'
      - '.github/workflows/cleanup-docker.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'internal/redis/**'
      - 'internal/k8s/**'
      - 'internal/cleanup/**'
      - 'cmd/cleanup/**'
      - 'Dockerfile.cleanup'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}-cleanup

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '^1.24'
          check-latest: true

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Test cleanup service
        run: |
          go test -v ./internal/redis/...
          go test -v ./internal/k8s/...
          go test -v ./internal/cleanup/...

      - name: Build cleanup binary (validation)
        run: |
          CGO_ENABLED=0 GOOS=linux go build -o cleanup ./cmd/cleanup

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=sha,format=long
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile.cleanup
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Display cleanup image info
        if: github.event_name != 'pull_request'
        run: |
          echo "Cleanup service Docker image built and pushed successfully!"
          echo "Tags: ${{ steps.meta.outputs.tags }}"
          echo "Labels: ${{ steps.meta.outputs.labels }}"
