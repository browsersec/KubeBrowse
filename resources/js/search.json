[[{"l":"Welcome to KubeBrowse","p":["Thank you for your interest in KubeBrowse! This project aims to create a secure browser-in-browser isolation platform powered by Kubernetes, providing ephemeral sandboxed browsing environments with no additional software requirements."]},{"l":"What is KubeBrowse?","p":["KubeBrowse is an open-source solution that offers containerized browser sessions for complete isolation from your local environment. Each session runs in an isolated container with:","Real-time threat analysis for uploaded files","Automatic cleanup after session timeout","Strict per-pod network isolation","Support for Chrome Extensions"]},{"l":"Getting Started"},{"l":"Prerequisites","p":["Kubernetes cluster","Docker","Go 1.13+"]},{"l":"Quick Installation","p":["For more detailed installation instructions, please refer to our installation guide."]},{"l":"How to Contribute","p":["We welcome contributions from everyone! Here's how you can help:","Code Contributions: Submit bug fixes or new features via pull requests","Documentation: Help improve our documentation","Bug Reports: Submit detailed bug reports","Feature Requests: Share your ideas for new features","Please check out our CONTRIBUTING.md for more information on how to contribute."]},{"l":"Community","p":["GitHub Issues: For bug reports and feature requests","Discussions: For questions and community support"]},{"l":"License","p":["KubeBrowse is licensed under the license included in the repository. See the LICENSE file for details.","We're excited to have you join our community and look forward to your contributions!"]}],[{"l":"Future Plan"},{"l":"Future Plan","p":["Keycloak for web auth via LDAP or RADIUS or OAUTH Provider","Redis or Dragonfly DB for seamless cache mechanisms","Observability integration with prometheus exporter and fluentd","Scalable ingress traffic management with Istio","Minio S3 integration for temporary file storage","Helm chart support"]},{"l":"Miscallaneous","p":["Any sought of ebpf support for current architecture","Integrating AI for custom policy management for a user domain to prevent web attacks and mitigating browser vulnerabilties (needs a specific chrome extension development)"]}],[{"l":"Contributing to KubeBrowse","p":["Thank you for your interest in contributing to GUAC! This document provides guidelines and instructions for contributing to this project."]},{"l":"Table of Contents","p":["Branching Strategy","Code of Conduct","Coding Standards","Commit Guidelines","Contributing to KubeBrowse","Development Environment Setup","Development Workflow","Documentation","Getting Started","Go Guidelines","PR Process","PR Requirements","Pre-commit Hooks","Project Structure","Pull Requests","Release Process","Testing","Troubleshooting Common Issues"]},{"l":"Code of Conduct","p":["We are committed to fostering a welcoming community. Please read and adhere to our Code of Conduct in all interactions."]},{"l":"Getting Started"},{"l":"Development Environment Setup","p":["Fork and clone the repository","Set up the development environment","Run the application","Access the application","Open a browser and navigate to http://localhost:4567/connect"]},{"l":"Troubleshooting Common Issues"},{"l":"Go Version Mismatch","p":["If you encounter errors like compile: version go1.24.0 does not match go tool version go1.24.3, follow these steps:","Check your Go version","Clean the Go module cache","Clean the Go build cache","Reset the build system","Install or update to a consistent Go version","Using Go's official installation:","Or using a version manager like asdf:","Check your environment variables","Ensure your PATH and GOROOT are set correctly:","Regenerate the Go modules"]},{"l":"Project Structure","p":["/cmd/guac/- Main application entry point","/utils/- Utility functions","/certs/- Certificate files for TLS","/.githooks/- Git hooks for development"]},{"l":"Development Workflow"},{"l":"Branching Strategy","p":["main- Stable branch containing the latest release","dev- Development branch for integrating features","Feature branches should be created from dev and named using the format: feature/short-description or fix/issue-description"]},{"l":"Commit Guidelines","p":["We follow Conventional Commits for commit messages:","Types include:","feat: A new feature","fix: A bug fix","docs: Documentation changes","style: Code style changes (formatting, etc.)","refactor: Code changes that neither fix bugs nor add features","test: Adding or modifying tests","chore: Changes to the build process or auxiliary tools","Example:"]},{"l":"Pre-commit Hooks","p":["This project uses Lefthook for managing Git hooks to ensure code quality. The pre-commit hook checks:","Code formatting","Static analysis","Linting","Tests","Potential secrets","Install the hooks with:","You can manually run the pre-commit checks:","If Lefthook is not found, you'll be prompted to install it. Lefthook hooks are automatically installed when you run make setup."]},{"l":"Pull Requests"},{"l":"PR Process","p":["Create a new branch from dev","Implement your changes","Ensure tests pass and code meets quality standards","Push your branch and create a pull request against dev","Address any feedback from reviewers"]},{"l":"PR Requirements","p":["PRs must have a clear description of changes","All tests must pass","Code must be properly formatted","Documentation must be updated if necessary","Changes should be covered by tests"]},{"l":"Coding Standards"},{"l":"Go Guidelines","p":["Follow the Go Code Review Comments","Use the standard Go formatting ( gofmt)","Write idiomatic Go code","Keep functions small and focused","Add comments for exported functions, types, and packages"]},{"l":"Testing","p":["Write tests for all new features and bug fixes","Aim for high test coverage, especially for critical paths","Use table-driven tests when appropriate","Run tests with make test"]},{"l":"Documentation","p":["Document all exported functions, types, and packages","Update the README.md if adding new features or changing existing functionality","Add examples for complex features"]},{"l":"Release Process","p":["Create a release branch from dev","Update version information","Run comprehensive tests","Merge to main once approved","Tag the release with the version number","Update documentation with release notes","Thank you for contributing to GUAC!*"]}],[{"l":"Architecture","p":["View on Eraser"]}],[{"l":"Acknowledgements","p":["This research is carried out in Centre of Excellence, Artificial Intelligence and Robotics (AIR). A kind mention for providing mentorship, computational resources, and infrastructure support critical to the successful development of the project.","digitalfortress"]}],[{"l":"KubeBrowse Authentication Setup Guide","p":["This guide explains how to set up GitHub OAuth and email-based authentication for KubeBrowse."]},{"l":"Features","p":["GitHub OAuth: Sign in with GitHub account","Email/Password Authentication: Traditional email and password sign-in","Server-side Sessions: Secure session management with database persistence","Frontend Integration: React components with authentication context","Session Management: Automatic session validation and cleanup"]},{"l":"Prerequisites","p":["Database: PostgreSQL database for user and session storage","GitHub OAuth App: GitHub OAuth application for OAuth authentication","Environment Variables: Properly configured environment variables"]},{"l":"Setup Instructions"},{"l":"1. Database Setup"},{"l":"Create Database"},{"l":"Run Migrations"},{"l":"Generate SQLC Code"},{"l":"2. GitHub OAuth Setup"},{"l":"Create GitHub OAuth App","p":["Go to GitHub Settings → Developer settings → OAuth Apps","Click \"New OAuth App\"","Fill in the details:","Application name: KubeBrowse","Homepage URL: http://localhost:3000(or your domain)","Authorization callback URL: http://localhost:4567/auth/oauth/github/callback","Click \"Register application\"","Note down the Client ID and Client Secret"]},{"l":"3. Environment Configuration"},{"l":"Backend (.env)","p":["Create or update your .env file:"]},{"l":"Frontend (.env.local)","p":["Create a .env.local file in the frontend directory:"]},{"l":"4. Backend Setup"},{"l":"Install Dependencies"},{"l":"Build and Run"},{"l":"5. Frontend Setup"},{"i":"install-dependencies-1","l":"Install Dependencies"},{"l":"Run Development Server"},{"l":"API Endpoints"},{"l":"Authentication Endpoints","p":["/auth/login","/auth/logout","/auth/me","/auth/oauth/github","/auth/oauth/github/callback","/auth/register","Description","Endpoint","GET","Get current user info","GitHub OAuth callback","Login with email/password","Logout current user","Method","POST","Register with email/password","Start GitHub OAuth flow"]},{"l":"Request/Response Examples"},{"l":"Register with Email"},{"l":"Login with Email"},{"l":"Get Current User"},{"l":"Frontend Usage"},{"l":"Authentication Context","p":["The authentication state is managed by AuthContext and can be accessed using the useAuth hook:"]},{"l":"Authentication Components","p":["AuthModal: Modal dialog for login/register","LoginForm: Email/password login form","RegisterForm: Email/password registration form","UserMenu: Dropdown menu for authenticated users"]},{"l":"Database Schema"},{"l":"Users Table"},{"l":"Sessions Table"},{"l":"Security Considerations","p":["Session Tokens: Use cryptographically secure random tokens","Password Hashing: Passwords are hashed using bcrypt with default cost","HTTPS: Use HTTPS in production for secure cookie transmission","Session Expiration: Sessions expire after 7 days by default","CORS: Configure CORS appropriately for your domain","Environment Variables: Never commit secrets to version control"]},{"l":"Troubleshooting"},{"l":"Common Issues","p":["Database Connection Error","Verify PostgreSQL is running","Check DATABASE_URL format","Ensure database exists and user has permissions","GitHub OAuth Not Working","Verify GITHUB_CLIENT_ID and GITHUB_CLIENT_SECRET","Check callback URL matches GitHub app settings","Ensure FRONTEND_URL is correct","Session Not Persisting","Check cookie settings (secure, httpOnly, domain)","Verify session secret is set","Check session expiration times","CORS Issues","Verify CORS configuration allows your frontend domain","Check credentials: 'include' in frontend requests"]},{"l":"Debug Mode","p":["Enable debug logging:"]},{"l":"Production Deployment"},{"l":"Environment Variables for Production"},{"l":"Security Checklist","p":["Use HTTPS for all communications","Set secure session cookie flags","Use strong, unique session secrets","Configure proper CORS settings","Set up database connection pooling","Enable database SSL/TLS","Set up proper logging and monitoring","Configure rate limiting for auth endpoints"]},{"l":"Support","p":["For issues and questions:","Check the troubleshooting section","Review the logs for error messages","Verify environment configuration","Check database connectivity and migrations"]}],[{"l":"Local Development with Tilt","p":["This document describes how to use Tilt for local development of the Kubebrowse project on Kubernetes. Tilt provides a streamlined workflow with live updates, automated builds, and easy resource management."]},{"l":"Prerequisites","p":["Docker: Ensure Docker is installed and running. Tilt uses Docker to build container images. ( https://docs.docker.com/get-docker/)","Kubernetes Cluster: You need a local Kubernetes cluster. Options include:","Kind (Kubernetes IN Docker)","Minikube","Docker Desktop's built-in Kubernetes cluster. Ensure your kubectl context is pointing to your local development cluster ( kubectl config current-context).","Tilt: Install Tilt by following the instructions on the official Tilt website: Install Tilt"]},{"l":"Getting Started","p":["Clone the Repository: If you haven't already, clone the project repository:","Configure Kubernetes Context (if needed): The Tiltfile attempts to use your current Kubernetes context. If Tilt has trouble connecting or you need to specify a context:","Uncomment and modify the allow_k8s_contexts line in the Tiltfile at the root of the project. For example:","Replace 'kind-kind' or 'docker-desktop' with the name of your kubectl context.","Start Tilt: Navigate to the root directory of the project in your terminal and run:","Tilt will:","Build the container images for the frontend and backend services.","Deploy all resources defined in deployments/manifest.yml to your Kubernetes cluster.","Set up port forwarding for accessing the services locally:","Backend API ( browser-sandbox-api): localhost:4567","Frontend ( browser-sandbox-frontend): localhost:3000","Open a web browser with the Tilt UI, where you can monitor the status of your services, view logs, and manage resources.","Accessing the Application:","Frontend: Open your browser and go to http://localhost:3000","API: Accessible at http://localhost:4567"]},{"l":"Development Workflow","p":["Live Updates:","Backend (Go): When you save changes to Go files in the ./api, ./cmd, or ./internal directories, Tilt will automatically sync the changes to the running container, rebuild the Go application, and restart the pod.","Frontend (Vite/React): When you save changes to files in the ./frontend/src directory (or other relevant frontend paths like index.html, package.json), Tilt will sync the files.","If package.json or bun.lockb changes, dependencies will be reinstalled, and static assets will be rebuilt.","Caddy will serve the updated static files. You may need to refresh your browser to see these changes.(Note: For a Hot Module Replacement (HMR) experience with Vite, the frontend Dockerfile's CMD and Tiltfile's port-forwarding would need to be adjusted to use Vite's dev server directly.)","Logs: View real-time logs for each service in the Tilt UI.","Resource Management: The Tilt UI allows you to manually trigger updates, restart pods, and view Kubernetes resource details."]},{"l":"Stopping Tilt","p":["To stop Tilt and remove the deployed resources from your Kubernetes cluster, press Ctrl+C in the terminal where tilt up is running.","Alternatively, you can use tilt down."]},{"l":"Troubleshooting","p":["tilt doctor: Run tilt doctor in your terminal. This command checks your Tilt and Kubernetes setup and provides suggestions for fixing common issues.","Kubernetes Context: Ensure kubectl config current-context points to the correct local cluster. If not, use kubectl config use-context your-local-cluster-context.","Image Pull Issues: If Kubernetes has trouble pulling images, ensure your imagePullPolicy in deployments/manifest.yml is IfNotPresent for the services managed by Tilt (api, frontend). This should already be set by a previous step. Also, check your local Docker environment and Kubernetes cluster's ability to access local images (e.g., if using Minikube, you might need minikube image load image_name or configure Docker environment sharing). The update_mode(UPDATE_MODE_AUTO) in Tiltfile usually handles this for local clusters.","Port Conflicts: If the default ports (4567 for API, 3000 for frontend) are already in use on your local machine, you can change the local port in the port_forwards section of the Tiltfile. For example, change port_forwards=['3000:80'] to port_forwards=['3001:80'] to use localhost:3001 for the frontend.","This setup should significantly improve the local development experience when working with Kubernetes."]}],[{"l":"OAuth Setup Guide for KubeBrowse","p":["This guide explains how to set up and troubleshoot the OAuth authentication flow between the frontend and backend in your KubeBrowse application."]},{"l":"Overview","p":["The OAuth flow works as follows:","User clicks \"Continue with GitHub\" on the frontend","Frontend redirects to /auth/oauth/github(proxied to backend via Caddy)","Backend redirects to GitHub OAuth","User authenticates with GitHub","GitHub redirects back to backend callback","Backend creates session and sets cookie","Backend redirects to frontend /auth/success","Frontend detects OAuth success and establishes session","User is redirected to dashboard"]},{"l":"Prerequisites","p":["Kind Kubernetes cluster running","Tilt development environment","GitHub OAuth app configured","PostgreSQL and Redis running"]},{"l":"Configuration"},{"l":"1. Environment Variables","p":["Ensure these environment variables are set in your backend:"]},{"l":"2. GitHub OAuth App Setup","p":["Go to GitHub Settings > Developer settings > OAuth Apps","Create a new OAuth App","Set Authorization callback URL to: https://localhost:4567/auth/oauth/github/callback","Copy Client ID and Client Secret"]},{"l":"3. Frontend Proxy Configuration","p":["The frontend uses Caddy as a reverse proxy to forward API requests:","Environment Variable:","CADDY_GUAC_CLIENT_URL=https://browser-sandbox-api.browser-sandbox.svc.cluster.local:4567"]},{"l":"Troubleshooting"},{"l":"Common Issues"},{"l":"1. Cookies Not Being Set","p":["Symptoms:","User completes OAuth but session is not established","/auth/me returns 401 after OAuth","No session cookie in browser","Solutions:","Check cookie domain settings in backend","Ensure SameSite=None is not set for localhost","Verify Caddy is forwarding cookies correctly","Check CADDY_GUAC_CLIENT_URL environment variable"]},{"l":"2. CORS Issues","p":["Symptoms:","OAuth redirect fails","Browser console shows CORS errors","Solutions:","Backend should not set CORS for OAuth endpoints","Caddy proxy handles CORS automatically"]},{"l":"3. Session Validation Fails","p":["Symptoms:","User appears authenticated but requests fail","Session token mismatch","Solutions:","Check Redis connection","Verify session cleanup is working","Check session token format"]},{"l":"Debugging Steps"},{"l":"1. Check Backend Logs","p":["Look for:","OAuth flow logs","Session creation logs","Cookie setting logs"]},{"l":"2. Check Frontend Logs","p":["Look for:","Caddy proxy errors","Authentication attempts"]},{"l":"3. Check Caddy Configuration","p":["Verify the CADDY_GUAC_CLIENT_URL environment variable is set:"]},{"l":"4. Check Browser Network Tab","p":["Open Developer Tools > Network","Complete OAuth flow","Check:","OAuth redirect requests","Cookie headers","Response status codes"]},{"l":"5. Test API Endpoints"},{"l":"Cookie Debugging"},{"l":"Check Cookie Settings"},{"l":"Cookie Attributes","p":["Ensure cookies have:","Domain=localhost(for local development)","Path=/","HttpOnly=true","Secure=false(for local development)"]},{"l":"Testing"},{"l":"1. Manual Testing","p":["Start your development environment:","Open frontend in browser: http://localhost:3000","Click \"Sign In\" > \"Continue with GitHub\"","Complete GitHub OAuth","Verify you're redirected to /auth/success","Check if session is established"]},{"l":"2. Automated Testing","p":["Use the provided test script:","This script will:","Check cluster status","Verify services are running","Test OAuth endpoints","Validate session management"]},{"l":"Production Considerations"},{"l":"1. HTTPS","p":["Set Secure=true for cookies","Use proper SSL certificates","Update OAuth callback URLs"]},{"l":"2. Domain Configuration","p":["Update cookie domains for production","Configure proper CORS policies","Set appropriate SameSite cookie attributes"]},{"l":"3. Session Management","p":["Implement session rotation","Add rate limiting","Monitor session usage"]},{"l":"Architecture Notes"},{"l":"Frontend (React + Caddy)","p":["Uses React Context for auth state","Caddy reverse proxy for API communication","Handles OAuth callback routing"]},{"l":"Backend (Go + Gin)","p":["Goth library for OAuth providers","Redis for session storage","Cookie-based session management"]},{"l":"Infrastructure","p":["Kind cluster for local development","Tilt for development workflow","Caddy for frontend serving and proxying (instead of nginx)"]},{"l":"Support","p":["If you continue to have issues:","Check the troubleshooting section above","Review backend and frontend logs","Verify environment configuration","Test with the provided test script","Check GitHub OAuth app settings","Verify Caddy configuration and environment variables"]},{"l":"References","p":["Tilt Documentation","Goth OAuth Library","Caddy Reverse Proxy","React Router Authentication"]}]]