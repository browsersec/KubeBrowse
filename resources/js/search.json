[[{"l":"Welcome to KubeBrowse","p":["Thank you for your interest in KubeBrowse! This project aims to create a secure browser-in-browser isolation platform powered by Kubernetes, providing ephemeral sandboxed browsing environments with no additional software requirements."]},{"l":"What is KubeBrowse?","p":["KubeBrowse is an open-source solution that offers containerized browser sessions for complete isolation from your local environment. Each session runs in an isolated container with:","Real-time threat analysis for uploaded files","Automatic cleanup after session timeout","Strict per-pod network isolation","Support for Chrome Extensions"]},{"l":"Getting Started"},{"l":"Prerequisites","p":["Kubernetes cluster","Docker","Go 1.13+"]},{"l":"Quick Installation","p":["For more detailed installation instructions, please refer to our installation guide."]},{"l":"How to Contribute","p":["We welcome contributions from everyone! Here's how you can help:","Code Contributions: Submit bug fixes or new features via pull requests","Documentation: Help improve our documentation","Bug Reports: Submit detailed bug reports","Feature Requests: Share your ideas for new features","Please check out our CONTRIBUTING.md for more information on how to contribute."]},{"l":"Community","p":["GitHub Issues: For bug reports and feature requests","Discussions: For questions and community support"]},{"l":"License","p":["KubeBrowse is licensed under the license included in the repository. See the LICENSE file for details.","We're excited to have you join our community and look forward to your contributions!"]}],[{"l":"Future Plan"},{"l":"Future Plan","p":["Keycloak for web auth via LDAP or RADIUS or OAUTH Provider","Redis or Dragonfly DB for seamless cache mechanisms","Observability integration with prometheus exporter and fluentd","Scalable ingress traffic management with Istio","Minio S3 integration for temporary file storage","Helm chart support"]},{"l":"Miscallaneous","p":["Any sought of ebpf support for current architecture","Integrating AI for custom policy management for a user domain to prevent web attacks and mitigating browser vulnerabilties (needs a specific chrome extension development)"]}],[{"l":"Contributing to KubeBrowse","p":["Thank you for your interest in contributing to GUAC! This document provides guidelines and instructions for contributing to this project."]},{"l":"Table of Contents","p":["Branching Strategy","Code of Conduct","Coding Standards","Commit Guidelines","Contributing to KubeBrowse","Development Environment Setup","Development Workflow","Documentation","Getting Started","Go Guidelines","PR Process","PR Requirements","Pre-commit Hooks","Project Structure","Pull Requests","Release Process","Testing","Troubleshooting Common Issues"]},{"l":"Code of Conduct","p":["We are committed to fostering a welcoming community. Please read and adhere to our Code of Conduct in all interactions."]},{"l":"Getting Started"},{"l":"Development Environment Setup","p":["Fork and clone the repository","Set up the development environment","Run the application","Access the application","Open a browser and navigate to http://localhost:4567/connect"]},{"l":"Troubleshooting Common Issues"},{"l":"Go Version Mismatch","p":["If you encounter errors like compile: version go1.24.0 does not match go tool version go1.24.3, follow these steps:","Check your Go version","Clean the Go module cache","Clean the Go build cache","Reset the build system","Install or update to a consistent Go version","Using Go's official installation:","Or using a version manager like asdf:","Check your environment variables","Ensure your PATH and GOROOT are set correctly:","Regenerate the Go modules"]},{"l":"Project Structure","p":["/cmd/guac/- Main application entry point","/utils/- Utility functions","/certs/- Certificate files for TLS","/.githooks/- Git hooks for development"]},{"l":"Development Workflow"},{"l":"Branching Strategy","p":["main- Stable branch containing the latest release","dev- Development branch for integrating features","Feature branches should be created from dev and named using the format: feature/short-description or fix/issue-description"]},{"l":"Commit Guidelines","p":["We follow Conventional Commits for commit messages:","Types include:","feat: A new feature","fix: A bug fix","docs: Documentation changes","style: Code style changes (formatting, etc.)","refactor: Code changes that neither fix bugs nor add features","test: Adding or modifying tests","chore: Changes to the build process or auxiliary tools","Example:"]},{"l":"Pre-commit Hooks","p":["This project uses Git hooks to ensure code quality. The pre-commit hook:","Formats Go code with gofmt","Runs static analysis with go vet","Executes linting with golangci-lint when available","Runs tests","Checks for potential secrets","Install the hooks with:","You can manually run the pre-commit checks:"]},{"l":"Pull Requests"},{"l":"PR Process","p":["Create a new branch from dev","Implement your changes","Ensure tests pass and code meets quality standards","Push your branch and create a pull request against dev","Address any feedback from reviewers"]},{"l":"PR Requirements","p":["PRs must have a clear description of changes","All tests must pass","Code must be properly formatted","Documentation must be updated if necessary","Changes should be covered by tests"]},{"l":"Coding Standards"},{"l":"Go Guidelines","p":["Follow the Go Code Review Comments","Use the standard Go formatting ( gofmt)","Write idiomatic Go code","Keep functions small and focused","Add comments for exported functions, types, and packages"]},{"l":"Testing","p":["Write tests for all new features and bug fixes","Aim for high test coverage, especially for critical paths","Use table-driven tests when appropriate","Run tests with make test"]},{"l":"Documentation","p":["Document all exported functions, types, and packages","Update the README.md if adding new features or changing existing functionality","Add examples for complex features"]},{"l":"Release Process","p":["Create a release branch from dev","Update version information","Run comprehensive tests","Merge to main once approved","Tag the release with the version number","Update documentation with release notes","Thank you for contributing to GUAC!"]}],[{"l":"Architecture","p":["View on Eraser"]}],[{"l":"Acknowledgements","p":["This research is carried out in Centre of Excellence, Artificial Intelligence and Robotics (AIR). A kind mention for providing mentorship, computational resources, and infrastructure support critical to the successful development of the project.","digitalfortress"]}]]