# lefthook.yml
# See https://github.com/evilmartians/lefthook for more information

pre-commit:
  parallel: true
  commands:
    gofmt:
      glob: "*.go"
      exclude: "vendor/**"
      run: gofmt -w -s {staged_files} && git add {staged_files}
      stage_fixed: true
    
    go-vet:
      tags: golang
      glob: "*.go"
      exclude: "vendor/**"
      run: go vet ./...
    
    golangci-lint:
      tags: golang
      glob: "*.go"
      exclude: "vendor/**"
      run: |
        if command -v golangci-lint &> /dev/null; then
          golangci-lint run
        else
          echo "golangci-lint not found. Skipping linting."
          echo "Consider installing: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest"
          exit 0
        fi

    go-tests:
      tags: golang
      glob: "*.go"
      exclude: "vendor/**"
      run: go test -short ./...

    gosec:
      glob: "*.{go}"
      run: gosec  ./..
    
commit-msg:
  commands:
    lint-commit-msg:
      run: |
        # if no arg was passed, fallback to the usual commit-msg file
        file="${1:-$(git rev-parse --git-dir)/COMMIT_EDITMSG}"
        message="$(cat "$file")"

        if ! echo "$message" | grep -qE '^(feat|fix|docs|style|refactor|perf|test|build|ci|chore|revert)(\(.+\))?: .+'; then
          echo "Commit message format error!"
          echo "Please use conventional commits: type(scope): description"
          exit 1
        fi

    dco-check:
      run: |
        # if no arg was passed, fallback to the usual commit-msg file
        file="${1:-$(git rev-parse --git-dir)/COMMIT_EDITMSG}"
        message="$(cat "$file")"

        if ! echo "$message" | grep -q "Signed-off-by:"; then
          echo "DCO check failed!"
          echo "Commit message must include a 'Signed-off-by' line."
          echo "To fix this, commit with: git commit -s"
          echo "Or amend your commit: git commit --amend -s"
          exit 1
        fi

